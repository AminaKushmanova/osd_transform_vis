{"attributes":{"description":"","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"query\":\"\",\"language\":\"kuery\"},\"filter\":[]}"},"title":"sample_googleChartGauge","uiStateJSON":"{}","version":1,"visState":"{\"title\":\"sample_googleChartGauge\",\"type\":\"transform\",\"aggs\":[],\"params\":{\"meta\":\"({\\n    before_render: function() {\\n      console.log(this.response);\\n    // Get results\\n    let orders_per_day = this.response.ordersPerDay.aggregations.ordersPerDay.buckets;\\n    function last_day_count(orders) {\\n      // we drop the last bucket as done in Kibana sample and TSVB viz\\n      return orders[orders.length-2].doc_count;\\n    }\\n    // putting what we expect in response eases the following\\n    response.count = last_day_count(orders_per_day); \\n  }, \\n    \\n  after_render: function() {\\n    //-------------------------------------------------------------------------\\n    // function to get the location of a CSS selector within a shadow DOM \\n    //-------------------------------------------------------------------------\\n    function getShadowDomLocation(selector) {\\n      let vizLocation;\\n      // output-viz being the top selector used by the Transform plugin\\n      // Get all the output-viz elements (can have mutliple selector if multiple transfrm vizs in a dashboard)\\n      // selector parameter value must be unque within the DOM\\n      const elements = $('.output-vis');\\n      let shadow;\\n      for (let elem of elements) {\\n        shadow = elem.shadowRoot;\\n        vizLocation = $(shadow).find(selector);\\n        if (vizLocation.length > 0) {\\n          // selector found, exiting\\n          break;\\n        } else {\\n          vizLocation = '.notFound';\\n        }\\n      } \\n      const obj = {\\n      vizLocation: vizLocation,\\n      shadowRoot: shadow\\n      }\\n      // obj object contains the shadowRoot element and and the location of the selector within the shadowRoot\\n      return obj; \\n    }\\n    \\n    // Get external JS lib\\n    $.getScript(\\\"https://www.gstatic.com/charts/loader.js\\\").done(function( script, textStatus ) {\\n      console.log(\\\"Import retention js Complete\\\");\\n      \\n      // specify where is located your Gauge in the HTML doc\\n      let gaugeLocation = getShadowDomLocation(\\\"#ordersGauge\\\").vizLocation[0]\\n      // Remove children to avoid multiple graphs\\n      $(gaugeLocation).empty();\\n\\n      google.charts.load('current', {'packages':['gauge']});\\n      google.charts.setOnLoadCallback(drawChart);\\n\\n      function drawChart() {\\n        var data = google.visualization.arrayToDataTable([\\n          ['Label', 'Value'],\\n          ['rate', response.count]\\n        ]);\\n\\n        var options = {\\n          width: 800, height: 240,\\n          max: 200,\\n          redColor: '#CD3C14',\\n          yellowColor: '#FFCC00',\\n          greenColor: '#32C832',\\n          redFrom: 0, redTo: 80,\\n          yellowFrom:80, yellowTo: 120, \\n          greenFrom: 120, greenTo: 200,\\n          minorTicks: 5\\n        };\\n\\n        var chart = new google.visualization.Gauge(gaugeLocation);\\n\\n        chart.draw(data, options);\\n\\n      }\\n    });\\n}\\n})\",\"multiquerydsl\":\"{\\n  \\\"ordersPerDay\\\": {\\n    \\\"index\\\": \\\"opensearch_dashboards_sample_data_ecommerce\\\",\\n    \\\"query\\\": {\\n      \\\"bool\\\": {\\n        \\\"must\\\": [\\n          \\\"_DASHBOARD_CONTEXT_\\\",\\n          \\\"_TIME_RANGE_[order_date]\\\"\\n        ]\\n      }\\n    },\\n    \\\"aggs\\\": {\\n      \\\"ordersPerDay\\\": {\\n        \\\"date_histogram\\\": {\\n          \\\"field\\\": \\\"order_date\\\",\\n          \\\"interval\\\": \\\"day\\\"\\n        }\\n      }\\n    }\\n  }\\n}\",\"formula\":\"<style>\\n\\n.gaugeTitle{\\n  margin-top: 20px;\\n  margin-left: 20px;\\n  color: #F16E00;\\n  font-weight: bold;\\n  text-align: left;\\n  font-size : 20px;\\n}\\n\\n</style>\\n\\n\\n\\n<body>\\n  <div id=\\\"ordersGauge\\\"></div>\\n  <div class=\\\"gaugeTitle\\\">Last Daily Order Rate</div>\\n</body>\"}}"},"id":"93b42230-3c7c-11ec-834b-d3680dc5ae92","migrationVersion":{"visualization":"7.10.0"},"references":[],"type":"visualization","updated_at":"2021-11-03T08:03:58.656Z","version":"WzMyLDNd"}
{"exportedCount":1,"missingRefCount":0,"missingReferences":[]}