{"attributes":{"description":"","kibanaSavedObjectMeta":{"searchSourceJSON":"{\"query\":{\"language\":\"kuery\",\"query\":\"\"},\"filter\":[]}"},"title":"map_openstreetmap_custom_geojson","uiStateJSON":"{}","version":1,"visState":"{\"title\":\"map_openstreetmap_custom_geojson\",\"type\":\"transform\",\"aggs\":[],\"params\":{\"formula\":\"<style>\\n  #map { height: 600px; }  \\n  \\n  .myDivIcon {\\n    text-align: center; /* Horizontally center the text (icon) */\\n    line-height: 20px; /* Vertically center the text (icon) */\\n    color: blue;\\n  }\\n    \\n  .myDivIconPurple {\\n    text-align: center; /* Horizontally center the text (icon) */\\n    line-height: 20px; /* Vertically center the text (icon) */\\n    color: purple;\\n  }\\n</style>\\n\\n<link rel=\\\"stylesheet\\\" href=\\\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\\\"\\n   integrity=\\\"sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A==\\\"\\n   crossorigin=\\\"\\\"/>\\n\\n<link rel=\\\"stylesheet\\\" href=\\\"https://use.fontawesome.com/releases/v5.6.3/css/all.css\\\">\\n   \\n<div id=\\\"myDiv\\\">\\n</div>\",\"meta\":\"// Leaflet use\\n// https://nouvelle-techno.fr/articles/pas-a-pas-inserer-une-carte-openstreetmap-sur-votre-site\\n\\n// Custom geojson\\n// https://leafletjs.com/examples/geojson/\\n\\n({\\n  getShadowDomLocation: function(selector) {\\n  let vizLocation;\\n  // output-viz being the top selector used by the Transform plugin\\n  // Get all the output-viz elements (can have mutliple selector if multiple transfrm vizs in a dashboard)\\n  // selector parameter value must be unque within the DOM\\n  const elements = $('.output-vis');\\n  let shadow;\\n  for (let elem of elements) {\\n      shadow = elem.shadowRoot;\\n      vizLocation = $(shadow).find(selector);\\n      if (vizLocation.length > 0) {\\n      // selector found, exiting\\n        break;\\n      } else {\\n        vizLocation = '.notFound';\\n      }\\n  } \\n  const obj = {\\n    vizLocation: vizLocation,\\n    shadowRoot: shadow\\n    } \\n// obj object contains the shadowRoot element and and the location of the selector within the shadowRoot \\n  return obj;\\n},\\n\\ncss: function() {  \\n  const css_list = [\\n    \\\"https://use.fontawesome.com/releases/v5.6.3/css/all.css\\\",\\n    \\\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\\\"\\n  ];  \\n  for (let css_file of css_list) {\\n    const links = document.head.querySelectorAll(\\\"link\\\");\\n\\n    // Already been injected\\n    for(let l in links) if(links[l].href == css_file) return;\\n      const link = document.createElement('link');\\n      link.rel = \\\"stylesheet\\\";\\n      link.href = css_file;\\n      document.head.appendChild(link);\\n    } \\n  },\\n\\n  before_render: function() {\\n    // Set geo points\\n    let locations = [\\n      {\\n  \\t\\t\\t\\\"id\\\": \\\"1\\\",\\n  \\t\\t\\t\\\"name\\\": \\\"Paris\\\",\\n  \\t\\t\\t\\\"lat\\\": \\\"48.8566\\\",\\n  \\t\\t\\t\\\"lon\\\": \\\"2.3522\\\",\\n  \\t\\t\\t\\\"size\\\": \\\"4\\\",\\n  \\t\\t\\t\\\"class\\\": \\\"myDivIconPurple\\\"\\n  \\t\\t}, {\\n  \\t\\t\\t\\\"id\\\": \\\"2\\\",\\n  \\t\\t\\t\\\"name\\\": \\\"Nice\\\",\\n  \\t\\t\\t\\\"lat\\\": \\\"43.7034\\\",\\n  \\t\\t\\t\\\"lon\\\": \\\"\\t7.2663\\\",\\n  \\t\\t\\t\\\"size\\\": \\\"2\\\",\\n  \\t\\t\\t\\\"class\\\": \\\"myDivIcon\\\"\\n  \\t\\t}, {\\n  \\t\\t\\t\\\"id\\\": \\\"3\\\",\\n  \\t\\t\\t\\\"name\\\": \\\"Toulouse\\\",\\n  \\t\\t\\t\\\"lat\\\": \\\"43.6045\\\",\\n  \\t\\t\\t\\\"lon\\\": \\\"\\t1.4440\\\",\\n  \\t\\t\\t\\\"size\\\": \\\"2\\\",\\n  \\t\\t\\t\\\"class\\\": \\\"myDivIconPurple\\\"\\n  \\t\\t}, {\\n  \\t\\t\\t\\\"id\\\": \\\"4\\\",\\n  \\t\\t\\t\\\"name\\\": \\\"Grenoble\\\",\\n  \\t\\t\\t\\\"lat\\\": \\\"45.1715\\\",\\n  \\t\\t\\t\\\"lon\\\": \\\"5.7224\\\",\\n  \\t\\t\\t\\\"size\\\": \\\"3\\\",\\n  \\t\\t\\t\\\"class\\\": \\\"myDivIconPurple\\\"\\n  \\t\\t}, {\\n  \\t\\t\\t\\\"id\\\": \\\"5\\\",\\n  \\t\\t\\t\\\"name\\\": \\\"Bordeaux\\\",\\n  \\t\\t\\t\\\"lat\\\": \\\"44.8400\\\",\\n  \\t\\t\\t\\\"lon\\\": \\\"-0.5800\\\",\\n  \\t\\t\\t\\\"size\\\": \\\"2\\\",\\n  \\t\\t\\t\\\"class\\\": \\\"myDivIcon\\\"\\n  \\t\\t}\\n    ]\\n    \\n    response = locations;\\n  },\\n  \\n  after_render: function() {\\n    const meta = this.meta; \\n    let locations = response;\\n\\n    $.getScript(\\\"https://cdn.jsdelivr.net/npm/leaflet@1.7.1/dist/leaflet.js\\\")\\n    .done(function(script, textStatus) {\\n      $.getScript(\\\"https://cdn.jsdelivr.net/gh/lguillaud/osd_transform_vis/main/geojson/departements.geojson.js\\\")\\n      .done(function(script, textStatus) {\\n\\n        // Get geojson into json object\\n        let myGeoJson = JSON.parse(departements);\\n\\n        // Create HTML container for map\\n        // Rebuild each time to avoid multiple maps layers\\n        let myDiv = meta.getShadowDomLocation(\\\"#myDiv\\\").vizLocation; \\n        $(myDiv).empty();\\n        $(myDiv).append('<div id=\\\"map\\\"></div>')\\n        let mapLocation = meta.getShadowDomLocation(\\\"#map\\\").vizLocation[0];\\n  \\n        // Create map object\\n        let map=new L.map(mapLocation);\\n        \\n        // Add GeoJSON layer to map\\n        // Set options\\n        let myStyle = {\\n          \\\"color\\\": \\\"#ff7800\\\",\\n          \\\"weight\\\": 3,\\n          \\\"opacity\\\": 0.15\\n        };\\n        L.geoJSON(myGeoJson, { style: myStyle }).addTo(map);\\n        \\n        // Maps location\\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', { \\n          attribution: 'data Â© <a href=\\\"//osm.org/copyright\\\">OpenStreetMap</a>/ODbL - render <a href=\\\"//openstreetmap.fr\\\">OSM France</a>',\\n          minZoom: 1,\\n      \\t\\tmaxZoom: 20\\n      \\t}).addTo(map); \\n  \\n        // Create markers group\\n        let markerGroup = L.layerGroup();\\n        \\n        // Markers creation\\n        let markers = [];  \\n        for (let location in locations) { \\n          // Icon to use\\n          let myIcon = L.divIcon({\\n      \\t\\t\\thtml: '<i class=\\\"fas fa-circle fa-' + locations[location].size + 'x\\\"></i>',\\n      \\t\\t\\ticonSize: [20, 20],\\n      \\t\\t\\tclassName: locations[location].class\\n      \\t\\t}); \\n  \\t\\n  \\t      // If custom icon\\n          let marker = L.marker([locations[location].lat, locations[location].lon], { icon: myIcon })\\n          // Default icon\\n          //let marker = L.marker([locations[location].lat, locations[location].lon]) \\n            .addTo(map)\\n            .bindPopup(locations[location].name); \\n               \\n          // Add marker to group\\n          markerGroup.addLayer(marker);\\n          // Add marker to list of markers \\n  \\t\\t    markers.push(marker);\\n        }\\n    \\n        // Create marker group for zoom \\n        let group = new L.featureGroup(markers);\\n        // Make all markers visible, using pad to avoid marker being cut \\n        map.fitBounds(group.getBounds().pad(0.3));\\n        map.addLayer(markerGroup);\\n      });    \\n    });    \\n  }\\n})\",\"multiquerydsl\":\"\"}}"},"id":"e16cddd0-617c-11ec-9097-65d979b50b16","migrationVersion":{"visualization":"7.10.0"},"references":[],"type":"visualization","updated_at":"2021-12-20T10:34:33.682Z","version":"WzE5NSwxNF0="}
{"exportedCount":1,"missingRefCount":0,"missingReferences":[]}